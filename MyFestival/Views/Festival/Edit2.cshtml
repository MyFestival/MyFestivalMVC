@model MyFestival.Models.FestivalVM
@{
    ViewBag.Title = "Edit Your Festival";
    Layout = "~/Views/Shared/Festival.cshtml";
}

<h2>Edit Your Festival</h2>
@using (Html.BeginForm("Edit2", "Festival", FormMethod.Post, new {enctype="multipart/form-data"}))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <ol class="breadcrumb">
            <li><a href="~/Festival/">Home</a></li>
            <li class="active">Editing Festival @Model.FestivalName</li>
            @Html.HiddenFor(model => model.FestivalID)
        </ol>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.FestivalName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-info-sign"></i></span>
                    @Html.TextBoxFor(model => model.FestivalName, new { @class = "form-control", @style = "width:250px" })
                </div>
                @Html.ValidationMessageFor(model => model.FestivalName, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.TextBoxFor(model => model.startDate, new { @class = "form-control datepicker", @style = "width:250px" })
                </div>
                @Html.ValidationMessageFor(model => model.startDate, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.TextBoxFor(model => model.endDate, new { @class = "form-control datepicker", @style = "width:250px" })
                </div>
                <!--<input class="form-control datepicker" style="width:250px" name="endDate" placeholder="Please pick date..."/>-->
                @Html.ValidationMessageFor(model => model.endDate, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Towns, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-info-sign"></i></span>
                    @Html.DropDownListFor(p => p.SelectedTown, Model.Towns.Select(p => new SelectListItem() { Text = p.Value.ToString(), Value = p.Key.ToString(), Selected = false }), new { @class = "form-control", @style = "width:250px" })
                </div>
                @Html.ValidationMessageFor(model => model.Towns, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.County, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-info-sign"></i></span>
                    @Html.DropDownListFor(p => p.SelectedCounty, Model.County.Select(p => new SelectListItem() { Text = p.Value.ToString(), Value = p.Key.ToString(), Selected = false }), new { @class = "form-control", @style = "width:250px" })
                </div>
                @Html.ValidationMessageFor(model => model.County, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FestivalType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-tag"></i></span>
                    @Html.DropDownListFor(p => p.SelectedFestivalType, Model.FestivalType.Select(p => new SelectListItem() { Text = p.Value.ToString(), Value = p.Key.ToString(), Selected = false }), new { @class = "form-control", @style = "width:250px" })
                </div>
                @Html.ValidationMessageFor(model => model.FestivalType, null, new { @style = "color:red;" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.sDescription, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-info-sign"></i></span>
                    @Html.TextBoxFor(model => model.sDescription, new { @class = "form-control", @style = "width:210px" })
                </div>
                @Html.ValidationMessageFor(model => model.sDescription, null, new { @style = "color:red;" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-info-sign"></i></span>
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @style = "width:210px" })
                </div>
                @Html.ValidationMessageFor(model => model.Location, null, new { @style = "color:red;" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.festivalLogo, new{@class="control-label col-md-2"})
            <div class="col-md-10">
                <input name="imageFile" id="File" type="file"/>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-info" />

                <a class="btn btn-warning" href="@Url.Action("Index", new { id = @Model.FestivalID })">Back to Index</a>
            </div>
        </div>
        <br />
    </div>
}

@Html.Partial("CreateFestivalType", new MyFestival.Models.FestivalTypeVM())

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () { // will trigger when the document is ready
            $('.datepicker').datepicker({
                format: 'dd-mm-yyyy',
                currentText: 'Now'
            }); //Initialise any date pickers
        });
    </script>

    <script>
        $(document).ready(function () {
            $('#SelectedFestivalType').change(function () {
                if ($(this).find(":selected").val() == -1) {
                    $('#myModal').modal('show');
                    $('.focus :input:first').focus();
                }
            });
        });
    </script>
    <script type="text/javascript">
        function ajaxResponse(data) {
            alert("This Worked and the Data ID is: " + data.FestivalTypeID);
            var newOption = "<option value='" + data.FestivalTypeID + "'>" + data.Name + "</option>";
            $('#SelectedFestivalType').append(newOption);
            $('#myModal').modal('hide');

            $("#SelectedFestivalType option[value='" + data.FestivalTypeID + "']").attr("selected", "selected");
        };
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#startDate").datepicker("setDate", '+1', { dateFormat: "yyyy/mm/dd" }).on('changeDate', function (ev) {
                $(this).blur();
                $(this).datepicker('hide');
            });
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#endDate").datepicker("setDate", '+2', { dateFormat: "yyyy/mm/dd " }).on('changeDate', function (ev) {
                $(this).blur();
                $(this).datepicker('hide');
            });
        });
    </script>
}