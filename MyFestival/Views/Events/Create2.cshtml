@model MyFestival.Models.EventsVM

@{
    ViewBag.Title = "Create Event";
    Layout = "~/Views/Shared/Festival.cshtml";
}

<h2>Add an event for #@Model.festivalID</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.EventsName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-pencil"></i></span>
                    <input class="form-control" id="EventsName" required="required" style="width: 210px" name="EventsName" placeholder="Please enter event name" />
                    @*@Html.EditorFor(model => model.EventsName, new { @class = "form-control", @style = "width:250px" })*@
                </div>
                @Html.ValidationMessageFor(model => model.EventsName, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.eventsDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
                    @Html.TextBoxFor(model => model.eventsDate, new { @class = "form-control datepicker", @style = "width:210px" })
                </div>
                @Html.ValidationMessageFor(model => model.eventsDate, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                    <input id="startTime" name="startTime" required="required" class="form-control bootstrap-timepicker" style="width: 210px" />
                    @*@Html.EditorFor(model => model.startTime, new { @class = "form-control", @style = "width:250px" })*@
                </div>
                @*@Html.EditorFor(model => model.startTime, new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.startTime, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class='input-group date' id='datetimepicker4'>
                    <span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span>
                    <input name="endTime" id="endTime" type='text' class="form-control bootstrap-timepicker" style="width: 210px" />
                    @*@Html.TextBoxFor(model => model.startDate, new { @class = "form-control datepicker", @style = "width:210px" })*@
                </div>
                @Html.ValidationMessageFor(model => model.endTime, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.eType, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="input-group">
                    <span class="input-group-addon"><i class="glyphicon glyphicon-tag"></i></span>
                    @Html.DropDownListFor(p => p.selectedEType, Model.eType.Select(p => new SelectListItem() { Text = p.Value.ToString(), Value = p.Key.ToString(), Selected = false }), new { @class = "form-control", @style = "width:210px", @onchange = "checkaddnew();" })
                </div>
                @Html.ValidationMessageFor(model => model.eType, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Location, new { @style = "width:300px;", @class = "form-control", @rows = "3" })
                @Html.ValidationMessageFor(model => model.Location, null, new { @style = "color:red;" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.eventsImage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="imageFile" id="File" type="file" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-info" />

                @Html.ActionLink("Back to List", "Index", "Festival", null, new { @class = "btn btn-danger" })
            </div>
        </div>
    </div>
}

@Html.Partial("CreateEventType", new MyFestival.Models.EventTypeVM())


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            $('#selectedEType').change(function () {
                if ($(this).find(":selected").val() == -1) {
                    $('#myModal').modal('show');
                }
            });
        });
    </script>

    <script type="text/javascript">
        function ajaxResponse(data) {
            alert("This Worked and the Data ID is: " + data.EventTypeID);
            var newOption = "<option value='" + data.EventTypeID + "'>" + data.Name + "</option>";
            $('#selectedEType').append(newOption);
            $('#myModal').modal('hide');

            $("#selectedEType option[value='" + data.EventTypeID + "']").attr("selected", "selected");
        };
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#eventsDate").datepicker('setDate', '+1',{dateFormat: "dd/mm/yy"}).on('changeDate', function (ev) {
                $(this).blur();
                $(this).datepicker('hide');
            });
        });
    </script>

    <script type="text/javascript">
        $('#startTime').timepicker({
            minuteStep: 5,
            showInputs: false,
            disableFocus: true
        });
    </script>
    
        <script type="text/javascript">
            $('#endTime').timepicker({
                minuteStep: 5,
                showInputs: false,
                disableFocus: true
            });
    </script>

}